# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish charts

on:
  push:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    name: Package and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Package and release Charts
      run: |
        # Variables
        REPO_OWNER=`echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
        
        # Loop through charts
        cd charts
        for d in */; do
          cd $d
          
          # Extract Chart Name
          NAME=$(yq -r '.name' Chart.yaml)
          VERSION=$(yq -r '.version' Chart.yaml)
          
          # Get tags
          TAGS=$(curl -sS -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://${REGISTRY}/v2/${REPO_OWNER}/charts/${NAME}/tags/list | jq .tags)
          
          for tag in $(echo "${TAGS}" | jq -r '.[]'); do
            if [ "${tag}" == "${VERSION}" ]; then
              FOUND=1
            fi
          done
          
          if [ ! ${FOUND} ]; then
            helm package .
            PKG_NAME=`ls *.tgz`
            helm push ${PKG_NAME} oci://${REGISTRY}/${REPO_OWNER}/charts
          fi
          
          cd ..
        done