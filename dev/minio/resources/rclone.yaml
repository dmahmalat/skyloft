apiVersion: batch/v1
kind: CronJob
metadata:
  name: minio-backup
  namespace: core-services
spec:
  schedule: "45 * * * *"
  successfulJobsHistoryLimit: 24
  failedJobsHistoryLimit: 5
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: rclone
            image: docker.io/rclone/rclone:1.62.2
            args: [ "sync", "$(SRC_REMOTE):$(SRC_PATH)", "$(DST_REMOTE):$(DST_PATH)" ]
            envFrom:
            - configMapRef:
                name: minio-backup
            env:
            - name: RCLONE_CONFIG_SRC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-access-key
                  key: AWS_ACCESS_KEY_ID
            - name: RCLONE_CONFIG_SRC_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-access-key
                  key: AWS_SECRET_ACCESS_KEY
            - name: RCLONE_CONFIG_DST_GCS_SERVICE_ACCOUNT_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: gcs-access-key
                  key: GCS_SERVICE_ACCOUNT_JSON

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-backup
  namespace: core-services
data:
  # Source remote configurations
  SRC_REMOTE: "src"
  SRC_PATH: "backup"
  RCLONE_CONFIG_SRC_TYPE: "s3"
  RCLONE_CONFIG_SRC_REGION: "skyloft"
  RCLONE_CONFIG_SRC_PROVIDER: "Minio"
  RCLONE_CONFIG_SRC_ENV_AUTH: "false"
  RCLONE_CONFIG_SRC_ENDPOINT: "https://s3.dev.skyloft.cc"

  # Source remote configurations
  DST_REMOTE: "dst"
  DST_PATH: "skyloft-storage-bucket-dev-6051ba7"
  RCLONE_CONFIG_DST_TYPE: "google cloud storage"
  RCLONE_CONFIG_DST_GCS_BUCKET_POLICY_ONLY: "true"
  RCLONE_CONFIG_DST_GCS_LOCATION: "us"